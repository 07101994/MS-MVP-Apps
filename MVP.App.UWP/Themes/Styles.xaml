<ResourceDictionary
    x:Class="MVP.App.Themes.Styles"
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:apiModels="using:MVP.Api.Models"
    xmlns:appModels="using:MVP.App.Models"
    xmlns:controls="using:WinUX.Xaml.Controls"
    xmlns:converters="using:WinUX.Xaml.Converters"
    xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
    xmlns:ignore="http://www.ignore.com"
    xmlns:interactivity="using:Microsoft.Xaml.Interactivity"
    xmlns:localConverters="using:MVP.App.Converters"
    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
    xmlns:rules="using:WinUX.Data.Validation.Rules"
    xmlns:textBox="using:WinUX.Xaml.Behaviors.TextBox"
    xmlns:validation="using:WinUX.Data.Validation"
    xmlns:validationRules="using:MVP.App.ValidationRules"
    mc:Ignorable="d ignore">

    <localConverters:BackgroundToForegroundBrushConverter
        x:Key="BackgroundToForegroundBrushConverter"
        DarkForegroundBrush="{StaticResource BlackThemeBrush}"
        LightForegroundBrush="{StaticResource WhiteThemeBrush}" />
    <converters:BooleanToVisibilityConverter x:Key="BooleanToVisibilityConverter" />
    <converters:InverseBooleanToVisibilityConverter x:Key="InverseBooleanToVisibilityConverter" />
    <converters:EmptyStringFormatConverter x:Key="EmptyStringFormatConverter" EmptyStringValue="No data available." />
    <converters:StringToVisibilityConverter x:Key="StringToVisibilityConverter" />
    <converters:DateTimeFormatConverter x:Key="DateTimeFormatConverter" />
    <localConverters:DateTimeToDateTimeOffsetConverter x:Key="DateTimeToDateTimeOffsetConverter" />

    <localConverters:AwardCategoryToIconConverter x:Key="AwardCategoryToIconConverter" />
    <localConverters:AwardCategoryToColorBrushConverter
        x:Key="AwardCategoryToColorBrushConverter"
        AccessBrush="{StaticResource AccessThemeBrush}"
        DefaultBrush="{StaticResource MvpBlueThemeBrush}"
        ExcelBrush="{StaticResource ExcelThemeBrush}"
        OfficeBrush="{StaticResource OfficeThemeBrush}"
        OneNoteBrush="{StaticResource OneNoteThemeBrush}"
        OutlookBrush="{StaticResource OutlookThemeBrush}"
        PowerPointBrush="{StaticResource PowerPointThemeBrush}"
        VisioBrush="{StaticResource VisioThemeBrush}"
        VisualStudioBrush="{StaticResource VisualStudioThemeBrush}"
        WordBrush="{StaticResource WordThemeBrush}" />

    <validation:ValidationRules x:Key="UrlValidationRules">
        <validation:ValidationRules.Rules>
            <rules:UrlValidationRule ErrorMessage="The value is not a valid URL." />
        </validation:ValidationRules.Rules>
    </validation:ValidationRules>

    <validation:ValidationRules x:Key="NumericValidationRules">
        <validation:ValidationRules.Rules>
            <validationRules:PositiveIntValidationRule ErrorMessage="The value is not a valid number." />
        </validation:ValidationRules.Rules>
    </validation:ValidationRules>

    <Style x:Key="BaseSelectorItemStyle" TargetType="SelectorItem">
        <Setter Property="Margin" Value="0,10,0,0" />
        <Setter Property="HorizontalContentAlignment" Value="Stretch" />
        <Setter Property="VerticalContentAlignment" Value="Stretch" />
    </Style>

    <ItemsPanelTemplate x:Key="ItemsStackPanelTemplate">
        <ItemsStackPanel />
    </ItemsPanelTemplate>

    <Style x:Key="MvpSigninButtonStyle" TargetType="Button">
        <Setter Property="Height" Value="60" />
        <Setter Property="Background" Value="{StaticResource MvpBlueLightThemeBrush}" />
        <Setter Property="Foreground" Value="{StaticResource WhiteThemeBrush}" />
        <Setter Property="BorderBrush" Value="{ThemeResource ButtonBorderBrush}" />
        <Setter Property="BorderThickness" Value="0" />
        <Setter Property="Padding" Value="20,5" />
        <Setter Property="HorizontalAlignment" Value="Left" />
        <Setter Property="VerticalAlignment" Value="Center" />
        <Setter Property="FontFamily" Value="{ThemeResource ContentControlThemeFontFamily}" />
        <Setter Property="FontWeight" Value="SemiLight" />
        <Setter Property="FontSize" Value="{ThemeResource ControlContentThemeFontSize}" />
        <Setter Property="UseSystemFocusVisuals" Value="True" />
        <Setter Property="FocusVisualMargin" Value="-3" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="Button">
                    <Grid
                        x:Name="RootGrid"
                        Padding="{TemplateBinding Padding}"
                        Background="{TemplateBinding Background}">
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="Auto" />
                            <ColumnDefinition />
                        </Grid.ColumnDefinitions>
                        <Image
                            Height="35"
                            Margin="0,0,15,0"
                            Source="../Assets/MVPPerson.png" />
                        <ContentPresenter
                            x:Name="ContentPresenter"
                            Grid.Column="1"
                            HorizontalContentAlignment="{TemplateBinding HorizontalContentAlignment}"
                            VerticalContentAlignment="{TemplateBinding VerticalContentAlignment}"
                            AutomationProperties.AccessibilityView="Raw"
                            BorderBrush="{TemplateBinding BorderBrush}"
                            BorderThickness="{TemplateBinding BorderThickness}"
                            Content="{TemplateBinding Content}"
                            ContentTemplate="{TemplateBinding ContentTemplate}"
                            ContentTransitions="{TemplateBinding ContentTransitions}" />
                        <VisualStateManager.VisualStateGroups>
                            <VisualStateGroup x:Name="CommonStates">
                                <VisualState x:Name="Normal">
                                    <Storyboard>
                                        <PointerUpThemeAnimation Storyboard.TargetName="RootGrid" />
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="PointerOver">
                                    <Storyboard>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetName="RootGrid" Storyboard.TargetProperty="Background">
                                            <DiscreteObjectKeyFrame KeyTime="0" Value="{StaticResource MvpBlueLightestThemeBrush}" />
                                        </ObjectAnimationUsingKeyFrames>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetName="ContentPresenter" Storyboard.TargetProperty="Foreground">
                                            <DiscreteObjectKeyFrame KeyTime="0" Value="{StaticResource WhiteThemeBrush}" />
                                        </ObjectAnimationUsingKeyFrames>
                                        <PointerUpThemeAnimation Storyboard.TargetName="RootGrid" />
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="Pressed">
                                    <Storyboard>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetName="RootGrid" Storyboard.TargetProperty="Background">
                                            <DiscreteObjectKeyFrame KeyTime="0" Value="{StaticResource MvpBlueDarkestThemeBrush}" />
                                        </ObjectAnimationUsingKeyFrames>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetName="ContentPresenter" Storyboard.TargetProperty="Foreground">
                                            <DiscreteObjectKeyFrame KeyTime="0" Value="{StaticResource WhiteThemeBrush}" />
                                        </ObjectAnimationUsingKeyFrames>
                                        <PointerDownThemeAnimation Storyboard.TargetName="RootGrid" />
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="Disabled">
                                    <Storyboard>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetName="RootGrid" Storyboard.TargetProperty="Background">
                                            <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource ButtonBackgroundDisabled}" />
                                        </ObjectAnimationUsingKeyFrames>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetName="ContentPresenter" Storyboard.TargetProperty="Foreground">
                                            <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource ButtonForegroundDisabled}" />
                                        </ObjectAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                            </VisualStateGroup>
                        </VisualStateManager.VisualStateGroups>
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <DataTemplate x:Key="ContributionFlyoutTemplate" x:DataType="appModels:EditableContributionFlyoutViewModel">
        <RelativePanel>
            <controls:HeaderedTextBlock
                x:Name="ActivityType"
                Header="Activity type"
                RelativePanel.AlignLeftWithPanel="True"
                RelativePanel.AlignRightWithPanel="True"
                RelativePanel.AlignTopWithPanel="True"
                Style="{StaticResource SeparatedHeaderedTextBlockStyle}"
                Text="{Binding Item.TypeName, Mode=OneWay}" />

            <controls:HeaderedTextBlock
                x:Name="ContributionArea"
                Header="Contribution area"
                RelativePanel.AlignLeftWithPanel="True"
                RelativePanel.AlignRightWithPanel="True"
                RelativePanel.Below="ActivityType"
                Style="{StaticResource SeparatedHeaderedTextBlockStyle}"
                Text="{Binding Item.Technology.Name, Mode=OneWay}" />

            <controls:HeaderedTextBlock
                x:Name="DateOfActivity"
                Header="Date of activity"
                RelativePanel.AlignLeftWithPanel="True"
                RelativePanel.AlignRightWithPanel="True"
                RelativePanel.Below="ContributionArea"
                Style="{StaticResource SeparatedHeaderedTextBlockStyle}"
                Text="{Binding Item.StartDate, Mode=OneWay, Converter={StaticResource DateTimeFormatConverter}, ConverterParameter=d}" />

            <controls:HeaderedTextBlock
                x:Name="ContributionDescription"
                Header="Description"
                RelativePanel.AlignLeftWithPanel="True"
                RelativePanel.AlignRightWithPanel="True"
                RelativePanel.Below="DateOfActivity"
                Style="{StaticResource SeparatedHeaderedTextBlockStyle}"
                Text="{Binding Item.Description, Mode=OneWay}"
                Visibility="{Binding Item.Description, Mode=OneWay, Converter={StaticResource StringToVisibilityConverter}}" />
        </RelativePanel>
    </DataTemplate>

    <DataTemplate x:Key="EditableContributionFlyoutTemplate" x:DataType="appModels:EditableContributionFlyoutViewModel">
        <RelativePanel>
            <controls:ValidatingComboBox
                x:Name="ContributionType"
                Margin="0,0,0,10"
                DisplayMemberPath="Name"
                Header="Type"
                HeaderTemplate="{StaticResource StandardHeaderTemplate}"
                ItemsSource="{Binding Types, Mode=OneWay}"
                RelativePanel.AlignLeftWithPanel="True"
                RelativePanel.AlignRightWithPanel="True"
                RelativePanel.AlignTopWithPanel="True"
                SelectedItem="{Binding Item.Type, Mode=TwoWay}" />

            <controls:ValidatingComboBox
                x:Name="ContributionArea"
                Margin="0,0,0,10"
                DisplayMemberPath="Name"
                Header="Area"
                HeaderTemplate="{StaticResource StandardHeaderTemplate}"
                IsInvalid="{Binding Item.IsTechnologyInvalid, Mode=TwoWay}"
                IsMandatory="True"
                ItemsSource="{Binding Areas, Mode=OneWay}"
                RelativePanel.AlignLeftWithPanel="True"
                RelativePanel.AlignRightWithPanel="True"
                RelativePanel.Below="ContributionType"
                SelectedItem="{Binding Item.Technology, Mode=TwoWay}" />

            <CalendarDatePicker
                x:Name="ContributionDate"
                Margin="0,0,0,10"
                HorizontalAlignment="Stretch"
                Date="{Binding Item.StartDate, Mode=TwoWay, Converter={StaticResource DateTimeToDateTimeOffsetConverter}}"
                Header="Date"
                HeaderTemplate="{StaticResource StandardHeaderTemplate}"
                MaxDate="{Binding MaxDateOfActivity}"
                RelativePanel.AlignLeftWithPanel="True"
                RelativePanel.AlignRightWithPanel="True"
                RelativePanel.Below="ContributionArea" />

            <controls:ValidatingTextBox
                x:Name="ContributionTitle"
                Margin="0,0,0,10"
                Header="Title"
                HeaderTemplate="{StaticResource StandardHeaderTemplate}"
                IsInvalid="{Binding Item.IsTitleInvalid, Mode=TwoWay}"
                IsMandatory="True"
                RelativePanel.AlignLeftWithPanel="True"
                RelativePanel.AlignRightWithPanel="True"
                RelativePanel.Below="ContributionDate">
                <interactivity:Interaction.Behaviors>
                    <textBox:TextBoxTextUpdateBehavior Text="{Binding Item.Title, Mode=TwoWay}" />
                </interactivity:Interaction.Behaviors>
            </controls:ValidatingTextBox>

            <controls:ValidatingTextBox
                x:Name="ContributionUrl"
                Margin="0,0,0,10"
                Header="URL"
                HeaderTemplate="{StaticResource StandardHeaderTemplate}"
                IsInvalid="{Binding Item.IsReferenceUrlInvalid, Mode=TwoWay}"
                RelativePanel.AlignLeftWithPanel="True"
                RelativePanel.AlignRightWithPanel="True"
                RelativePanel.Below="ContributionTitle"
                ValidationRules="{StaticResource UrlValidationRules}">
                <interactivity:Interaction.Behaviors>
                    <textBox:TextBoxTextUpdateBehavior Text="{Binding Item.ReferenceUrl, Mode=TwoWay}" />
                </interactivity:Interaction.Behaviors>
            </controls:ValidatingTextBox>

            <controls:ValidatingTextBox
                x:Name="ContributionDescription"
                Margin="0,0,0,10"
                AcceptsReturn="True"
                Header="Description"
                HeaderTemplate="{StaticResource StandardHeaderTemplate}"
                MaxLength="5000"
                RelativePanel.AlignLeftWithPanel="True"
                RelativePanel.AlignRightWithPanel="True"
                RelativePanel.Below="ContributionUrl"
                TextWrapping="Wrap">
                <interactivity:Interaction.Behaviors>
                    <textBox:TextBoxTextUpdateBehavior Text="{Binding Item.Description, Mode=TwoWay}" />
                </interactivity:Interaction.Behaviors>
            </controls:ValidatingTextBox>

            <controls:ValidatingTextBox
                x:Name="ContributionQuantity"
                Margin="0,0,0,10"
                Header="Quantity"
                HeaderTemplate="{StaticResource StandardHeaderTemplate}"
                IsInvalid="{Binding Item.IsAnnualQuantityInvalid, Mode=TwoWay}"
                IsMandatory="True"
                RelativePanel.AlignLeftWithPanel="True"
                RelativePanel.AlignRightWithPanel="True"
                RelativePanel.Below="ContributionDescription"
                ValidationRules="{StaticResource NumericValidationRules}">
                <interactivity:Interaction.Behaviors>
                    <textBox:TextBoxTextUpdateBehavior Text="{Binding Item.AnnualQuantityValue, Mode=TwoWay}" />
                </interactivity:Interaction.Behaviors>
            </controls:ValidatingTextBox>

            <controls:ValidatingTextBox
                x:Name="ContributionReach"
                Margin="0,0,0,10"
                Header="Reach"
                HeaderTemplate="{StaticResource StandardHeaderTemplate}"
                IsInvalid="{Binding Item.IsAnnualReachInvalid, Mode=TwoWay}"
                RelativePanel.AlignLeftWithPanel="True"
                RelativePanel.AlignRightWithPanel="True"
                RelativePanel.Below="ContributionQuantity"
                ValidationRules="{StaticResource NumericValidationRules}">
                <interactivity:Interaction.Behaviors>
                    <textBox:TextBoxTextUpdateBehavior Text="{Binding Item.AnnualReachValue, Mode=TwoWay}" />
                </interactivity:Interaction.Behaviors>
            </controls:ValidatingTextBox>
        </RelativePanel>
    </DataTemplate>

    <DataTemplate x:Key="ContributionListTileTemplate" x:DataType="apiModels:Contribution">
        <RelativePanel Background="{StaticResource MvpBlueLightestThemeBrush}">
            <Grid x:Name="ContributionImage" Background="{Binding Technology, Mode=OneWay, Converter={StaticResource AwardCategoryToColorBrushConverter}}">
                <Image
                    Width="70"
                    Height="70"
                    Source="{Binding Technology, Mode=OneWay, Converter={StaticResource AwardCategoryToIconConverter}}"
                    Stretch="UniformToFill" />
            </Grid>

            <TextBlock
                x:Name="Title"
                Margin="10,10,0,0"
                Foreground="{Binding Source={StaticResource MvpBlueLightestThemeBrush}, Converter={StaticResource BackgroundToForegroundBrushConverter}}"
                MaxLines="1"
                RelativePanel.AlignRightWithPanel="True"
                RelativePanel.AlignTopWithPanel="True"
                RelativePanel.RightOf="ContributionImage"
                Style="{StaticResource HeaderedTextBlockSubheaderStyle}"
                Text="{Binding Title, Mode=OneWay, FallbackValue='Unknown title'}"
                TextTrimming="CharacterEllipsis" />

            <TextBlock
                x:Name="Date"
                Margin="10,0,0,10"
                VerticalAlignment="Bottom"
                FontSize="14"
                Foreground="{Binding Source={StaticResource MvpBlueLightestThemeBrush}, Converter={StaticResource BackgroundToForegroundBrushConverter}}"
                MaxLines="1"
                RelativePanel.AlignBottomWithPanel="True"
                RelativePanel.AlignRightWithPanel="True"
                RelativePanel.Below="Title"
                RelativePanel.RightOf="ContributionImage"
                Style="{StaticResource HeaderedTextBlockSubheaderStyle}"
                Text="{Binding StartDate, Mode=OneWay, Converter={StaticResource DateTimeFormatConverter}, ConverterParameter=d}"
                TextTrimming="CharacterEllipsis" />
        </RelativePanel>
    </DataTemplate>

</ResourceDictionary>